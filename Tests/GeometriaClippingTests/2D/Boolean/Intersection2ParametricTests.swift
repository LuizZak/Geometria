import Geometria
import TestCommons
import XCTest

@testable import GeometriaClipping

class Intersection2ParametricTests: XCTestCase {
    let accuracy: Double = 1e-12

    func testIntersection_vennDiagram() {
        let lhs = Circle2Parametric.makeTestCircle(center: .init(x: -90, y: 0), radius: 200)
        let rhs = Circle2Parametric.makeTestCircle(center: .init(x:  90, y: 0), radius: 200)
        let sut = Intersection2Parametric(lhs, rhs, tolerance: accuracy)

        TestFixture.beginFixture(lineScale: 1.0) { fixture in
            fixture.add(lhs, category: "input 1")
            fixture.add(rhs, category: "input 2")

            fixture.assertions(on: sut)
                .assertAllSimplexes(
                    accuracy: accuracy,
                    [[GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: -90.0, y: 0.0), radius: 200.0, startAngle: Angle<Double>(radians: 0.0), sweepAngle: Angle<Double>(radians: 1.1040309877476002)), startPeriod: 0.0, endPeriod: 0.25)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 90.0, y: 0.0), radius: 200.0, startAngle: Angle<Double>(radians: 2.037561665842193), sweepAngle: Angle<Double>(radians: 1.1040309877476002)), startPeriod: 0.25, endPeriod: 0.5)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 90.0, y: 0.0), radius: 200.0, startAngle: Angle<Double>(radians: 3.141592653589793), sweepAngle: Angle<Double>(radians: 1.1040309877476002)), startPeriod: 0.5, endPeriod: 0.7500000000000001)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: -90.0, y: 0.0), radius: 200.0, startAngle: Angle<Double>(radians: 5.179154319431986), sweepAngle: Angle<Double>(radians: 1.1040309877476002)), startPeriod: 0.7500000000000001, endPeriod: 1.0))]]
                )
        }
    }

    func testIntersection_lhsContainsRhs() {
        let lhs = Circle2Parametric.makeTestCircle(radius: 100.0)
        let rhs = Circle2Parametric.makeTestCircle(radius: 80.0)
        let sut = Intersection2Parametric(lhs, rhs)

        TestFixture.beginFixture { fixture in
            fixture.assertions(on: sut)
                .assertAllSimplexes(accuracy: accuracy, [rhs.allSimplexes()])
        }
    }

    func testIntersection_rhsContainsLhs() {
        let lhs = Circle2Parametric.makeTestCircle(radius: 80.0)
        let rhs = Circle2Parametric.makeTestCircle(radius: 100.0)
        let sut = Intersection2Parametric(lhs, rhs)

        TestFixture.beginFixture { fixture in
            fixture.assertions(on: sut)
                .assertAllSimplexes(accuracy: accuracy, [lhs.allSimplexes()])
        }
    }

    func testIntersection_noIntersectionOrContainment() {
        let lhs = Circle2Parametric.makeTestCircle(center: .init(x: -100, y: 0), radius: 50.0)
        let rhs = Circle2Parametric.makeTestCircle(center: .init(x: 100, y: 0), radius: 50.0)
        let sut = Intersection2Parametric(lhs, rhs)

        TestFixture.beginFixture { fixture in
            fixture.assertions(on: sut)
                .assertAllSimplexes([])
        }
    }

    func testIntersection_lines_lines() {
        let lhs = LinePolygon2Parametric.makeStar()
        let rhs = LinePolygon2Parametric.makeHexagon(radius: 80.0)
        let sut = Intersection2Parametric(lhs, rhs)

        TestFixture.beginFixture(renderScale: 2.0) { fixture in
            fixture.assertions(on: sut)
                .assertAllSimplexes(
                    accuracy: accuracy,
                    [[GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 74.9785189589521, y: 8.697460292338837), end: Vector2<Double>(x: 32.3606797749979, y: 23.511410091698927)), startPeriod: 0.0, endPeriod: 0.08664003453370776)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 32.3606797749979, y: 23.511410091698927), end: Vector2<Double>(x: 31.42794501299971, y: 69.28203230275507)), startPeriod: 0.08664003453370776, endPeriod: 0.1745494006419623)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 31.42794501299971, y: 69.28203230275507), end: Vector2<Double>(x: 11.323626827162714, y: 69.28203230275508)), startPeriod: 0.1745494006419623, endPeriod: 0.21315475318146063)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 11.323626827162714, y: 69.28203230275508), end: Vector2<Double>(x: -12.360679774997894, y: 38.042260651806146)), startPeriod: 0.21315475318146063, endPeriod: 0.28843424861267153)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -12.360679774997894, y: 38.042260651806146), end: Vector2<Double>(x: -51.244447041333736, y: 49.80607872414753)), startPeriod: 0.28843424861267153, endPeriod: 0.36644315666238475)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -51.244447041333736, y: 49.80607872414753), end: Vector2<Double>(x: -61.86160744855665, y: 31.41661746672879)), startPeriod: 0.36644315666238475, endPeriod: 0.4072183987472413)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -61.86160744855665, y: 31.41661746672879), end: Vector2<Double>(x: -40.0, y: 4.898587196589413e-15)), startPeriod: 0.4072183987472413, endPeriod: 0.4807149843065429)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -40.0, y: 4.898587196589413e-15), end: Vector2<Double>(x: -61.86160744855664, y: -31.416617466728745)), startPeriod: 0.4807149843065429, endPeriod: 0.5542115698658444)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -61.86160744855664, y: -31.416617466728745), end: Vector2<Double>(x: -51.24444704133376, y: -49.80607872414752)), startPeriod: 0.5542115698658444, endPeriod: 0.5949868119507009)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -51.24444704133376, y: -49.80607872414752), end: Vector2<Double>(x: -12.360679774997903, y: -38.04226065180614)), startPeriod: 0.5949868119507009, endPeriod: 0.6729957200004142)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -12.360679774997903, y: -38.04226065180614), end: Vector2<Double>(x: 11.323626827162698, y: -69.28203230275508)), startPeriod: 0.6729957200004142, endPeriod: 0.748275215431625)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 11.323626827162698, y: -69.28203230275508), end: Vector2<Double>(x: 31.427945012999693, y: -69.28203230275513)), startPeriod: 0.748275215431625, endPeriod: 0.7868805679711233)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 31.427945012999693, y: -69.28203230275513), end: Vector2<Double>(x: 32.36067977499789, y: -23.511410091698934)), startPeriod: 0.7868805679711233, endPeriod: 0.874789934079378)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 32.36067977499789, y: -23.511410091698934), end: Vector2<Double>(x: 74.97851895895208, y: -8.697460292338846)), startPeriod: 0.874789934079378, endPeriod: 0.9614299686130857)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 74.97851895895208, y: -8.697460292338846), end: Vector2<Double>(x: 80.0, y: 0.0)), startPeriod: 0.9614299686130857, endPeriod: 0.9807149843065428)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 80.0, y: 0.0), end: Vector2<Double>(x: 74.9785189589521, y: 8.697460292338837)), startPeriod: 0.9807149843065428, endPeriod: 1.0))]]
                )
        }
    }

    func testIntersection_lines_arcs() {
        let lhs = LinePolygon2Parametric.makeHexagon()
        let rhs = Circle2Parametric.makeTestCircle(radius: 95)

        let sut = Intersection2Parametric(lhs, rhs)

        TestFixture.beginFixture(renderScale: 2.0) { fixture in
            fixture.assertions(on: sut)
                .assertAllSimplexes(
                    accuracy: accuracy,
                    [[GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 94.52562418976665, y: 9.481897043050221), end: Vector2<Double>(x: 55.47437581023338, y: 77.12064333539362)), startPeriod: 0.0, endPeriod: 0.13406139855266144)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 95.0, startAngle: Angle<Double>(radians: 0.947221645627822), sweepAngle: Angle<Double>(radians: 0.19995181113755164)), startPeriod: 0.13406139855266144, endPeriod: 0.16666666666666669)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 39.051248379533256, y: 86.60254037844386), end: Vector2<Double>(x: -39.05124837953323, y: 86.60254037844388)), startPeriod: 0.16666666666666669, endPeriod: 0.30072806521932804)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 95.0, startAngle: Angle<Double>(radians: 1.9944191968244196), sweepAngle: Angle<Double>(radians: 0.19995181113755145)), startPeriod: 0.30072806521932804, endPeriod: 0.33333333333333326)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -55.47437581023333, y: 77.12064333539367), end: Vector2<Double>(x: -94.52562418976665, y: 9.481897043050228)), startPeriod: 0.33333333333333326, endPeriod: 0.46739473188599484)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 95.0, startAngle: Angle<Double>(radians: 3.0416167480210174), sweepAngle: Angle<Double>(radians: 0.1999518111375514)), startPeriod: 0.46739473188599484, endPeriod: 0.5000000000000001)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -94.52562418976665, y: -9.481897043050205), end: Vector2<Double>(x: -55.4743758102334, y: -77.12064333539361)), startPeriod: 0.5000000000000001, endPeriod: 0.6340613985526615)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 95.0, startAngle: Angle<Double>(radians: 4.088814299217614), sweepAngle: Angle<Double>(radians: 0.19995181113755148)), startPeriod: 0.6340613985526615, endPeriod: 0.6666666666666667)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -39.051248379533334, y: -86.60254037844383), end: Vector2<Double>(x: 39.05124837953331, y: -86.60254037844386)), startPeriod: 0.6666666666666667, endPeriod: 0.8007280652193284)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 95.0, startAngle: Angle<Double>(radians: 5.136011850414214), sweepAngle: Angle<Double>(radians: 0.19995181113755003)), startPeriod: 0.8007280652193284, endPeriod: 0.8333333333333335)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 55.47437581023337, y: -77.12064333539365), end: Vector2<Double>(x: 94.52562418976665, y: -9.481897043050214)), startPeriod: 0.8333333333333335, endPeriod: 0.9673947318859949)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 95.0, startAngle: Angle<Double>(radians: 6.183209401610812), sweepAngle: Angle<Double>(radians: 0.09997590556877499)), startPeriod: 0.9673947318859949, endPeriod: 0.9836973659429974)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 95.0, startAngle: Angle<Double>(radians: 0.0), sweepAngle: Angle<Double>(radians: 0.09997590556877552)), startPeriod: 0.9836973659429974, endPeriod: 1.0))]]
                )
        }
    }

    func testIntersection_concaveShape() {
        let lhs = LinePolygon2Parametric.makeCShape()
        let rhs = LinePolygon2Parametric.makeRectangle(width: 10, height: 120)
        let sut = Intersection2Parametric(lhs, rhs)

        TestFixture.beginFixture(renderScale: 2) { fixture in
            fixture.assertions(on: sut)
                .assertAllSimplexes(
                    accuracy: accuracy,
                    [[GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -4.999999999999999, y: -50.0), end: Vector2<Double>(x: 5.000000000000005, y: -50.0)), startPeriod: 0.0, endPeriod: 0.16666666666666677)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 5.000000000000005, y: -50.0), end: Vector2<Double>(x: 4.999999999999982, y: -30.0)), startPeriod: 0.16666666666666677, endPeriod: 0.5000000000000002)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 4.999999999999982, y: -30.0), end: Vector2<Double>(x: -5.000000000000002, y: -30.0)), startPeriod: 0.5000000000000002, endPeriod: 0.6666666666666666)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -5.000000000000002, y: -30.0), end: Vector2<Double>(x: -4.999999999999999, y: -50.0)), startPeriod: 0.6666666666666666, endPeriod: 1.0))], [GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -5.000000000000022, y: 30.0), end: Vector2<Double>(x: 4.999999999999993, y: 30.0)), startPeriod: 0.0, endPeriod: 0.166666666666667)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 4.999999999999993, y: 30.0), end: Vector2<Double>(x: 4.999999999999977, y: 50.0)), startPeriod: 0.166666666666667, endPeriod: 0.5000000000000006)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: 4.999999999999977, y: 50.0), end: Vector2<Double>(x: -4.999999999999975, y: 50.0)), startPeriod: 0.5000000000000006, endPeriod: 0.6666666666666665)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.lineSegment2(GeometriaClipping.LineSegment2Simplex<Geometria.Vector2<Swift.Double>>(lineSegment: LineSegment<Vector2<Double>>(start: Vector2<Double>(x: -4.999999999999975, y: 50.0), end: Vector2<Double>(x: -5.000000000000022, y: 30.0)), startPeriod: 0.6666666666666665, endPeriod: 1.0))]]
                )
        }
    }

    func testIntersection_rhsOccludesLhsHole() {
        let radius: Double = 50.0
        let circles = [
            Circle2Parametric.makeTestCircle(center: .init(x: 110, y: 95), radius: radius),
            Circle2Parametric.makeTestCircle(center: .init(x: 63, y: 11), radius: radius),
            Circle2Parametric.makeTestCircle(center: .init(x: 158, y: 13), radius: radius),
        ]
        let lhs = union(circles)
        let rhs = Circle2Parametric.makeTestCircle(center: .init(x: 110, y: 40), radius: radius)
        let sut: Intersection2Parametric = Intersection2Parametric(lhs, rhs)

        TestFixture.beginFixture { fixture in
            fixture.add(lhs, category: "input 1")
            fixture.add(rhs, category: "input 2")

            fixture.assertions(on: sut)
                .assertAllSimplexes(
                    accuracy: accuracy,
                    [[GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 110.0, y: 95.0), radius: 50.0, startAngle: Angle<Double>(radians: 3.7239568914585366), sweepAngle: Angle<Double>(radians: 0.20376152639733064)), startPeriod: 0.0, endPeriod: 0.029580950916893424)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 63.0, y: 11.0), radius: 50.0, startAngle: Angle<Double>(radians: 1.3352154086201007), sweepAngle: Angle<Double>(radians: 0.20333977272057271)), startPeriod: 0.029580950916893424, endPeriod: 0.059100674010106)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 110.0, y: 40.0), radius: 50.0, startAngle: Angle<Double>(radians: 2.708719915434198), sweepAngle: Angle<Double>(radians: 0.43287273815559496)), startPeriod: 0.059100674010106, endPeriod: 0.12194270040753713)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 110.0, y: 40.0), radius: 50.0, startAngle: Angle<Double>(radians: 3.141592653589793), sweepAngle: Angle<Double>(radians: 1.5385551813406726)), startPeriod: 0.12194270040753713, endPeriod: 0.3453014772426852)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 63.0, y: 11.0), radius: 50.0, startAngle: Angle<Double>(radians: 5.850312569023991), sweepAngle: Angle<Double>(radians: 0.1370366729482829)), startPeriod: 0.3453014772426852, endPeriod: 0.3651956896976554)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 158.0, y: 13.0), radius: 50.0, startAngle: Angle<Double>(radians: 3.479527763071199), sweepAngle: Angle<Double>(radians: 0.13723703091386882)), startPeriod: 0.3651956896976554, endPeriod: 0.3851189889937512)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 110.0, y: 40.0), radius: 50.0, startAngle: Angle<Double>(radians: 4.783234246162836), sweepAngle: Angle<Double>(radians: 1.4999510610167501)), startPeriod: 0.3851189889937512, endPeriod: 0.6028734370398371)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 110.0, y: 40.0), radius: 50.0, startAngle: Angle<Double>(radians: 0.0), sweepAngle: Angle<Double>(radians: 0.4751721403952749)), startPeriod: 0.6028734370398371, endPeriod: 0.6718562524448358)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 158.0, y: 13.0), radius: 50.0, startAngle: Angle<Double>(radians: 1.6416415925730437), sweepAngle: Angle<Double>(radians: 0.14168991908293524)), startPeriod: 0.6718562524448358, endPeriod: 0.6924259969688237)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 110.0, y: 95.0), radius: 50.0, startAngle: Angle<Double>(radians: 5.55903299308776), sweepAngle: Angle<Double>(radians: 0.14178807622308226)), startPeriod: 0.6924259969688237, endPeriod: 0.7130099913936451)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 110.0, y: 40.0), radius: 50.0, startAngle: Angle<Double>(radians: 0.5823642378687435), sweepAngle: Angle<Double>(radians: 0.9884320889261534)), startPeriod: 0.7130099913936451, endPeriod: 0.8565049956968226)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 110.0, y: 40.0), radius: 50.0, startAngle: Angle<Double>(radians: 1.5707963267948966), sweepAngle: Angle<Double>(radians: 0.988432088926153)), startPeriod: 0.8565049956968226, endPeriod: 1.0))], [GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 110.0, y: 95.0), radius: 50.0, startAngle: Angle<Double>(radians: 4.4768080622098925), sweepAngle: Angle<Double>(radians: 0.23558091817479668)), startPeriod: 0.0, endPeriod: 0.17784752113040336)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 110.0, y: 95.0), radius: 50.0, startAngle: Angle<Double>(radians: 4.71238898038469), sweepAngle: Angle<Double>(radians: 0.21253518486108194)), startPeriod: 0.17784752113040336, endPeriod: 0.338297085863356)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 158.0, y: 13.0), radius: 50.0, startAngle: Angle<Double>(radians: 2.417440339497967), sweepAngle: Angle<Double>(radians: 0.42831624888451314)), startPeriod: 0.338297085863356, endPeriod: 0.6616466326524688)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 63.0, y: 11.0), radius: 50.0, startAngle: Angle<Double>(radians: 0.33793510948140587), sweepAngle: Angle<Double>(radians: 0.4481906547846685)), startPeriod: 0.6616466326524688, endPeriod: 1.0))]]
                )
        }
    }

    func testIntersection_lhsOccludesRhsHole() {
        let lhs = Circle2Parametric.makeTestCircle(radius: 90.0)
        let rhs1 = Circle2Parametric.makeTestCircle(radius: 100.0)
        let rhs2 = Circle2Parametric.makeTestCircle(radius: 80.0)
        let rhs = Compound2Parametric(contours: Subtraction2Parametric(rhs1, rhs2).allContours())
        let sut = Intersection2Parametric(lhs, rhs)

        TestFixture.beginFixture { fixture in
            fixture.assertions(on: sut)
                .assertAllSimplexes(
                    accuracy: accuracy,
                    [[GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 90.0, startAngle: Angle<Double>(radians: 0.0), sweepAngle: Angle<Double>(radians: 1.5707963267948966)), startPeriod: 0.0, endPeriod: 0.25)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 90.0, startAngle: Angle<Double>(radians: 1.5707963267948966), sweepAngle: Angle<Double>(radians: 1.5707963267948966)), startPeriod: 0.25, endPeriod: 0.5)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 90.0, startAngle: Angle<Double>(radians: 3.141592653589793), sweepAngle: Angle<Double>(radians: 1.5707963267948966)), startPeriod: 0.5, endPeriod: 0.75)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 90.0, startAngle: Angle<Double>(radians: 4.71238898038469), sweepAngle: Angle<Double>(radians: 1.5707963267948966)), startPeriod: 0.75, endPeriod: 1.0))], [GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 80.0, startAngle: Angle<Double>(radians: 6.283185307179586), sweepAngle: Angle<Double>(radians: -1.5707963267948966)), startPeriod: 0.0, endPeriod: 0.25)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 80.0, startAngle: Angle<Double>(radians: 4.71238898038469), sweepAngle: Angle<Double>(radians: -1.5707963267948966)), startPeriod: 0.25, endPeriod: 0.5)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 80.0, startAngle: Angle<Double>(radians: 3.141592653589793), sweepAngle: Angle<Double>(radians: -1.5707963267948966)), startPeriod: 0.5, endPeriod: 0.7499999999999999)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 80.0, startAngle: Angle<Double>(radians: 1.5707963267948966), sweepAngle: Angle<Double>(radians: -1.5707963267948966)), startPeriod: 0.7499999999999999, endPeriod: 1.0))]]
                )
        }
    }

    func testIntersection_lhsIntersectsRhsHole() {
        let lhs = Circle2Parametric.makeTestCircle(center: .init(x: -25, y: 30), radius: 90.0)
        let rhs1 = Circle2Parametric.makeTestCircle(radius: 100.0)
        let rhs2 = Circle2Parametric.makeTestCircle(radius: 80.0)
        let rhs = Compound2Parametric(contours: Subtraction2Parametric(rhs1, rhs2).allContours())
        let sut = Intersection2Parametric(lhs, rhs)

        TestFixture.beginFixture { fixture in
            fixture.assertions(on: sut)
                .assertAllSimplexes(
                    accuracy: accuracy,
                    [[GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: -25.0, y: 30.0), radius: 90.0, startAngle: Angle<Double>(radians: 0.21809540834932092), sweepAngle: Angle<Double>(radians: 0.5300169060962318)), startPeriod: 0.0, endPeriod: 0.08301981608583331)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 100.0, startAngle: Angle<Double>(radians: 1.1486965280692114), sweepAngle: Angle<Double>(radians: 0.4220997987256852)), startPeriod: 0.08301981608583331, endPeriod: 0.15648214290978218)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 100.0, startAngle: Angle<Double>(radians: 1.5707963267948966), sweepAngle: Angle<Double>(radians: 1.5707963267948966)), startPeriod: 0.15648214290978218, endPeriod: 0.4298638253489575)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 100.0, startAngle: Angle<Double>(radians: 3.141592653589793), sweepAngle: Angle<Double>(radians: 0.24078002432419543)), startPeriod: 0.4298638253489575, endPeriod: 0.4717692251927459)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: -25.0, y: 30.0), radius: 90.0, startAngle: Angle<Double>(radians: 3.782956891537647), sweepAngle: Angle<Double>(radians: 0.5300169060962322)), startPeriod: 0.4717692251927459, endPeriod: 0.5547890412785792)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 80.0, startAngle: Angle<Double>(radians: 3.8643426603950917), sweepAngle: Angle<Double>(radians: -0.7227500068052987)), startPeriod: 0.5547890412785792, endPeriod: 0.6554190768715551)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 80.0, startAngle: Angle<Double>(radians: 3.141592653589793), sweepAngle: Angle<Double>(radians: -1.5707963267948966)), startPeriod: 0.6554190768715551, endPeriod: 0.8741244228228955)), GeometriaClipping.Parametric2GeometrySimplex<Geometria.Vector2<Swift.Double>>.circleArc2(GeometriaClipping.CircleArc2Simplex<Geometria.Vector2<Swift.Double>>(circleArc: CircleArc2<Vector2<Double>>(center: Vector2<Double>(x: 0.0, y: 0.0), radius: 80.0, startAngle: Angle<Double>(radians: 1.5707963267948966), sweepAngle: Angle<Double>(radians: -0.9040697812067885)), startPeriod: 0.8741244228228955, endPeriod: 1.0))]]
                )
        }
    }

    #if GEOMETRIA_PERFORMANCE_TESTS

    func testPerformance_overlapping_circles() {
        let inputs = (0...10).map { offset in
            return Circle2Parametric.makeTestCircle(center: .init(x: Double(offset), y: 0.0), radius: 10.0)
        }

        measure {
            _ = intersection(inputs)
        }
    }

    #endif // #if GEOMETRIA_PERFORMANCE_TESTS
}
